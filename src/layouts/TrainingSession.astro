---
import '@/styles/globals.css'
import '@fontsource/permanent-marker'
import '@fontsource/playpen-sans/200.css'
import '@fontsource/playpen-sans/300.css'
import '@fontsource/playpen-sans/400.css'
import '@fontsource/playpen-sans/600.css'

interface Props {
	frontmatter: {
		title: string;
		description?: string;
	}
}

const {frontmatter: { title, description }} = Astro.props;
---

<!doctype html>
<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description ?? ""} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-white dark:bg-neutral-950 grid grid-cols-[1fr_min(65ch,_100%)_1fr] font-['Playpen_Sans']">
		<main class="col-start-2 col-end-3 py-4 text-lg font-light">
		<slot />
		</main>
	</body>
</html>
