---
import "@/styles/globals.css";
import Footer from "@/components/Footer.astro";

export interface Props {
	title?: string;
	description?: string;
	canonical?: string;
}
let {
	title = "Luka Košćak",
	description = "I build voice‑first AI",
	canonical = Astro.site?.toString(),
} = Astro.props;
if (title !== "Luka Košćak") {
	title += " | Luka Košćak";
}
---

<html lang="en" class="scroll-smooth">
	<head>
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta charset="utf-8" />
		<link rel="icon" href="/favicon.svg" />
		<link rel="canonical" href={canonical} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta property="og:image" content="/ogimage.png" />
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<script is:inline>
			const getThemePreference = () => {
				if (
					typeof localStorage !== "undefined" &&
					localStorage.getItem("theme")
				) {
					return localStorage.getItem("theme");
				}
				return window.matchMedia("(prefers-color-scheme: dark)").matches
					? "dark"
					: "light";
			};
			const isDark = getThemePreference() === "dark";
			document.documentElement.classList[isDark ? "add" : "remove"](
				"dark",
			);

			if (typeof localStorage !== "undefined") {
				const observer = new MutationObserver(() => {
					const isDark =
						document.documentElement.classList.contains("dark");
					localStorage.setItem("theme", isDark ? "dark" : "light");
				});
				observer.observe(document.documentElement, {
					attributes: true,
					attributeFilter: ["class"],
				});
			}
		</script>
	</head>
	<body class="relative min-h-[100dvh] antialiased pb-40">
		<slot />
		<Footer />
	</body>
</html>
